#
# Copyright (c) 2016 The Ontario Institute for Cancer Research. All rights reserved.
#
# This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#
# DCC ID Server - Configuration
#

###################################################################################################
# Common
###################################################################################################

spring:
  profiles.active: production

auth:
  server:
    prefix: id
    suffix: create.WRITE
# Server
server:
  port: 8443
  compression:
    enabled: true
    mime-types: text/tsv
  tomcat:
    max-threads: 50

# Caching
cache:
  dir: /tmp/dcc-id
  # Size calculations are made according to the current number of ids in the database and assumes JVM heap is atleast 6GB
  size:
    mutation: 3584
    donor: 32
    file: 32
    sample: 32
    specimen: 8

# Management endpoints
management:
  context_path: /admin
  address: 127.0.0.1
  port: 8444
  
---

###################################################################################################
# Production
###################################################################################################

# Spring
spring:
  profiles: production
  profiles.include: secure
  
# JDBC
spring.datasource:
  url: jdbc:postgresql://<host>:<port>/dcc_identifier
  username: <username>
  password: <password>
  driverClassName: org.postgresql.Driver

---

###################################################################################################
# Development
###################################################################################################

# Spring
spring:
  profiles: development

# JDBC
spring.datasource:
  url: jdbc:h2:mem:dcc_identifier;MODE=PostgreSQL
  # To get more insight, enable tracing:
  #  jdbc:h2:mem:dcc_identifier;TRACE_LEVEL_SYSTEM_OUT=4...

  username: username
  password: password
  schema: classpath:/sql/schema.sql
  driveClassName: org.h2.Driver

  # Note that the following database setting *must* be set this way in order to ensure that 
  # a second connection is never created. This is because the act of creating a 
  # connection will source the "runscript" identified above. This effectively
  # will empty the database. This was originally observed when the idle validation
  # query was doing just this. 
  validation-query: "/* Invalid query to fail if run! */ I SHOULD NEVER RUN!"
  minIdle: 1
  maxIdle: 1

---

###################################################################################################
# Secure
###################################################################################################

# Spring
spring:
  profiles: secure
   
# OAuth authentication server
auth:
  server:
    url: https://<host>/oauth/check_token
    clientId: <id>
    clientsecret: <password>
    
  # Connection retries in case of connection failure 
  connection:
  
    # Max number of retries
    maxRetries: 5
    
    # Initial timeout before the first retry. In milliseconds.
    initialBackoff: 15000
    
    # Multiplier that defines value of consequent timeouts before the next retry. 
    # E.g. TIMEOUT(n) = TIMEOUT(n-1) * MULTIPLIER
    multiplier: 2.0


---
###################################################################################################
# Test
###################################################################################################

# Spring
spring:
  profiles:
    include: [development]
  cache:
    type: none


